{"version":3,"sources":["components/Filter.js","components/NewUserForm.js","components/ContactList.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","term","handler","value","onChange","NewUserForm","handleSubmit","handleChange","handleChangeNumber","newName","newNumber","onSubmit","type","Contact","name","number","onClick","ContactList","persons","onDelete","map","p","i","id","baseUrl","personService","getAll","axios","get","then","res","console","log","data","addPerson","newPerson","post","deletePerson","delete","updatePerson","newObject","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","searchTerm","setSearchTerm","setMessage","setType","useEffect","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","existingPerson","find","setTimeout","window","confirm","updatedPerson","catch","error","response","personAdded","concat","index","r","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58616a46.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({term,handler}) => {\n    return (\n        <>\n        filter shown with <input value={term} onChange={handler} />\n        </>)\n}\nexport default Filter","import React from \"react\";\n\nconst NewUserForm = ({handleSubmit,handleChange,handleChangeNumber,newName,newNumber}) => {\n    return (<form onSubmit={handleSubmit}>\n        <div>\n          name: <input onChange={handleChange} value={newName} /><br />\n          number: <input onChange={handleChangeNumber} value={newNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>)\n}\n\nexport default NewUserForm","import React from 'react'\n\nconst Contact = ({name, number, handler}) => {\n    return <p>{name} {number} <button onClick={handler}>delete</button></p>\n}\n\nconst ContactList = ({persons, onDelete}) => {\n    return (\n        <>\n            {persons.map((p,i)=><Contact key={p.id} name={p.name} number={p.number} handler={()=>onDelete(i)} />)}\n        </>\n    )\n}\n\nexport default ContactList","import axios from 'axios'\nconst baseUrl=\"/api/persons\"\n\nconst getAll = () => {\n    return axios\n        .get(baseUrl)\n        .then(res=>{\n            console.log(res)\n            return res.data\n        })\n}\n\nconst addPerson = (newPerson) => {\n    return axios\n        .post(baseUrl,newPerson)\n        .then(res=>res.data)\n}\n\nconst deletePerson = (id) => {\n    return axios\n        .delete(`${baseUrl}/${id}`)\n        .then(res=>res.data)\n}\n\nconst updatePerson = (id,newObject) => {\n    return axios\n        .put(`${baseUrl}/${id}`,newObject)\n        .then(res=>res.data)\n}\n\nconst personService = {getAll, addPerson, deletePerson, updatePerson}\nexport default personService\n","import React from \"react\";\n\nconst Notification = ({type,message}) => {\n    if(message===null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport NewUserForm from './components/NewUserForm'\nimport ContactList from './components/ContactList'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ searchTerm, setSearchTerm] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [type,setType] = useState('error')\n\n  useEffect(()=>{\n    personService\n      .getAll()\n      .then(initialPersons=> {\n        setPersons(initialPersons)\n      })\n  },[])\n\n\n  const handleChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleChangeNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(p=>p.name.toLowerCase()===newName.toLowerCase())\n    if(!!existingPerson) {\n      if(existingPerson.number===newNumber) {\n        setType('error')\n        setMessage(`${newName} already exists!`)\n        setTimeout(()=>setMessage(null),5000)\n        setNewName('')\n        setNewNumber('')\n      } else {\n        if(window.confirm(`${newName} already exists! Do you want to update the number?`)) {\n          const newPerson = {name: newName, number: newNumber}\n          personService\n            .updatePerson(existingPerson.id,newPerson)\n            .then(updatedPerson=>{\n              setPersons(persons.map(p=>p.id===existingPerson.id ? updatedPerson : p))\n              setType('completion')\n              setMessage(`${newName} updated with new number`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000);\n              setNewName('')\n              setNewNumber('')\n            })\n            .catch(error=>{\n              setType('error')\n              debugger\n              if(error.response.data.error.toLowerCase().includes('validation')) {\n                setMessage(error.response.data.error)\n              } else {\n                setMessage(`Information of ${newName} has already been deleted`)\n              }\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000);\n              setNewName('')\n              setNewNumber('')\n              setPersons(persons.filter(p=>p.id!==existingPerson.id))\n            })\n            \n        } else {\n          setNewName('')\n          setNewNumber('')\n        }\n      }\n      \n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      personService\n        .addPerson(newPerson)\n        .then(personAdded=>{\n          setPersons(persons.concat(personAdded))\n          setType('completion')\n          setMessage(`Added new person, ${newPerson.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setType('error')\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n          setNewName('')\n          setNewNumber('')\n        })\n      \n    }\n  }\n\n  const handleDeleteOf = (index) => {\n    if(window.confirm(`Are you sure you want to delete ${persons[index].name}`)){\n      personService\n        .deletePerson(persons[index].id)\n        .then(r=>{\n          console.log(r)\n          setPersons(persons.filter(p=>p.id !== persons[index].id))\n          setType('completion')\n          setMessage(`${persons[index].name} deleted with success`)\n          setTimeout(()=>setMessage(null),5000)\n        })\n        .catch(error=>{\n          setType('error')\n          setMessage(`Information of ${persons[index].name} has already been deleted`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n          setPersons(persons.filter(p=>p.id!==persons[index].id))\n        })\n    }\n  }\n\n  const personsToShow = searchTerm!=='' ?\n    persons.filter(p=>p.name.toLowerCase().includes(searchTerm.toLowerCase())) :\n    persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={type} />\n      <Filter term={searchTerm} handler={handleSearch} />\n      <h2>add a new</h2>\n      <NewUserForm\n        handleChange={handleChange}\n        handleChangeNumber={handleChangeNumber}\n        newName={newName}\n        newNumber={newNumber}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <ContactList persons={personsToShow} onDelete={handleDeleteOf} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}